#!/usr/bin/env ruby
require 'errlog'
require 'yaml'
require 'ostruct'
require 'colorize'

def usage
  puts <<End

Errlog reporting tool (visit http://errorlog.co for details)

Usage:

  errlogr [params] "text to report"

Parameters

  --warn, --trace
    report as warning or trace, respectively (default is error)

  -k <acc_key>
    account key (should obtain it in http://logger.com)

  -i <acc_id>
    account id (should obtain it in http://logger.com)

  -p platform
    set the platform value

  -a appname
    set the application name. 'default' if not set.

Some/all of there parameters might be set in the .errlog.yml file in the current path
or down the tree. Command-line parameters override these from configuration file.

Note that configuration file will not be used if both id and key are set in the command line
arguments!

See details at http://errorlog.co/help/cli

exit status: 100 - error in arguments, 10 - failed to send, 0 - successfully sent
End
  exit 100
end

def error text
  STDOUT.puts "\n*** Error: #{text}".red
  usage
end

usage if ARGV.length == 0

key, id, text, host, app, platform = nil, nil, '', nil, nil, nil
severity = 100

begin
  n = 0
  while n < ARGV.length do
    arg = ARGV[n]
    n += 1
    case arg
      when '-k'
        key = ARGV[n]
        n += 1
      when '-i'
        id = ARGV[n]
        n += 1
      when /^--local/
        host = "http://localhost:8080"
      when /^--warn/
        severity = Errlog::WARNING
      when /^--trace/
        severity = Errlog::TRACE
      when '-a'
        app = ARGV[n]
        n += 1
      when '-p'
        platform = ARGV[n]
        n += 1
      else
        text = arg.strip
        break
    end
  end
rescue
  error "Error parsing arguments"
end

def search_down_the_tree(path, name)
  n = File.join path, name
  return n if File.exists?(n)
  root = File::split(path)[0]
  return nil if root == path
  search_down_the_tree root, name
end

if !key || !id
  unless (cfile = search_down_the_tree(Dir::pwd, '.errlog.yml'))
    error "Neither id/key or configuration file was found"
    usage
  end
  cfg = OpenStruct.new YAML::load_file(cfile)
  id ||= cfg.account_id
  key ||= cfg.account_key
  app ||= cfg.application
  platform ||= cfg.platform
end

if !key || !id || text==''
  error "You must specify at least id, key and text"
  usage
end

usage if !key || !id || text.length == 0

Errlog.configure id, key, {host: host}
Errlog.context.platform = platform
Errlog.context.application = app

Errlog.report text, severity do |error|
  STDERR.puts "Error: #{error}".red if error
  exit error ? 10 : 0
end
Errlog.wait
