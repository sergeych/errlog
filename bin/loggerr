#!/usr/bin/env ruby
require 'loggerr'
require 'yaml'
require 'ostruct'

def usage
  puts <<End

Loggerr reporting tool (visit http://loggerr.com for details)

Usage:

  loggerr [params] "text to report"

Parameters

  --warn, --trace
    report as warning or trace, respectively (default is error)

  -k <acc_key>
    account key (should obtain it in http://logger.com)

  -i <acc_id>
    account id (should obtain it in http://logger.com)

  -p platform
    set the platform value

  -a appname
    set the application name

Some/all of there parameters might be set in the .loggerr.yml file in the current path
or down the tree. Command-line parameters override these from configuration file.

Note that configuration file will not be used if both id and key are set in the command line
arguments!
End
  exit 100
end

usage if ARGV.length == 0

key, id, text, host, app, platform = nil, nil, '', nil, nil, nil
severity = 100

begin
  n = 0
  while n < ARGV.length do
    arg = ARGV[n]
    n += 1
    case arg
      when '-k'
        key = ARGV[n]
        n += 1
      when '-i'
        id = ARGV[n]
        n += 1
      when /^--local/
        host = "http://localhost:3000"
      when /^--warn/
        severity = Loggerr::WARNING
      when /^--trace/
        severity = Loggerr::TRACE
      when '-a'
        app = ARGV[n]
        n += 1
      when '-p'
        platform = ARGV[n]
        n += 1
      else
        text = arg.strip
        break
    end
  end
rescue
  puts "Error parsing arguments"
  usage
end

def search_down_the_tree(path, name)
  n = File.join path, name
  return n if File.exists?(n)
  root = File::split(path)[0]
  return nil if root == path
  search_down_the_tree root, name
end

if !key || !id
  unless (cfile = search_down_the_tree(Dir::pwd, '.loggerr.yml'))
    puts "Neither id/key or configuration file were found"
    usage
  end
  cfg = OpenStruct.new YAML::load_file(cfile)
  id ||= cfg.account_id
  key ||= cfg.account_key
  app ||= cfg.application
  platform ||= cfg.platform
end

if !key || !id || text==''
  puts "You must specify at least id, key and text"
  usage
end

text ||= 'The test again!!!'

usage if !key || !id || text.length == 0

#puts "Sending loggerr report id=#{id} key=#{key} host=#{host}: (#{severity}): #{text}"
Loggerr.configure id, key, {host: host}
Loggerr.context.platform = platform
Loggerr.context.application = app
Loggerr.report text, severity
Loggerr.wait
